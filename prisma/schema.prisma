generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique @db.VarChar(255)
  password        String          @db.VarChar(255)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  status          userStatus      @default(ACTIVE)
  transactions    Transaction[]   // Mỗi User có thể có nhiều Transaction
  profile         Profile?        

  @@map("user")
}

enum userStatus {
  ACTIVE
  BANNED
}

model Profile {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  role       Role     @default(USER)
  type       Type     @default(NORMAL)
  language   Language @default(EN)
  theme      Theme    @default(LIGHT)
  username   String?  @unique
  phone      String?
  company    String?
  apiKey     String   @unique @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])

  @@map("profile")
}

enum Role {
  USER
  SUPPORT
  DEV
  ADMIN
}

enum Type {
  NORMAL
  ADVANCED
  PRIORITY
}

enum Language {
  EN
  VI
}

enum Theme {
  LIGHT
  DARK
}

model Coupon {
  id              Int         @id @default(autoincrement())
  code            String      @unique
  description     String?
  couponType      CouponType
  couponValue     Int
  maxRedemptions  Int         @default(1)
  redeemedCount   Int         @default(0)
  isActive        Boolean     @default(true)
  expiresAt       DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@map("coupon")
}

//Not use Fix_Amout because other money country
enum CouponType {
  INCREASE
  DISCOUNT
  REWARD
}

model Transaction {
  id          Int                 @id @default(autoincrement())
  userID      Int
  type        TransactionType
  service     String
  reference   String              @unique
  description String?
  points      Int
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  user        User                @relation(fields: [userID], references: [id])

  @@map("transaction")
}

enum TransactionType {
  CREDIT
  DEBIT
}

model EntityCaptcha {
  id        Int               @id @default(autoincrement())
  provider  CaptchaProvider   @default(CAPTCHA2)
  api       String            @unique
  balance   Float
  createAt  DateTime          @default(now())
  updateAt  DateTime          @updatedAt
  status    CaptchaStatus     @default(DIE)

  @@map("entity_captcha")
}

enum CaptchaProvider {
  CAPTCHA2
}

enum CaptchaStatus {
  FULL
  MEDIUM
  LOW
  DIE
}